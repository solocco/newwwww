#!/bin/sh

# Cache file lists sorted alphabetically
IMG_FILES=$(find "$HOME/pictures/walls" -type f \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" -o -name "*.bmp" \) | sort)
VID_FILES=$(find "$HOME/pictures/walls" -type f \( -name "*.mp4" -o -name "*.mkv" -o -name "*.webm" \) | sort)

# Kill previous instance of the currently running background process
kill_bg() {
    if pgrep swaybg > /dev/null; then
        pkill swaybg
    elif pgrep mpvpaper > /dev/null; then
        pkill mpvpaper
    fi
}

# Function to set background using swaybg and generate/apply Flavours theme
set_swaybg() {
    selected_image="$1"
    nohup swaybg -i "$selected_image" -m fill > /dev/null 2>&1 &
    if [ "$THEME_UPDATE" = "yes" ]; then
        flavours generate dark "$selected_image" >/dev/null 2>&1
        flavours apply generated >/dev/null 2>&1 &
    fi
}

# Function to set wallpaper using mpvpaper
set_mpvpaper() {
    selected_video="$1"
    nohup mpvpaper -vsp -o "no-audio pause=no --loop --ytdl-format='bestvideo[height<=1080]+bestaudio/best'" '*' "$selected_video" > /dev/null 2>&1 &
}

# Prompt for exact file selection or random mode
echo "(1) Random background | (2) Choose specific file"
read -r mode_choice

# If mode is specific selection, display files and get user choice
if [ "$mode_choice" = "2" ]; then
    echo "Available files:"
    all_files=$(printf "%s\n%s" "$IMG_FILES" "$VID_FILES" | sort | nl)
    echo "$all_files"
    echo "Select a file number:"
    read -r file_choice
    selected_file=$(printf "%s\n%s" "$IMG_FILES" "$VID_FILES" | sort | sed -n "${file_choice}p")

    if [ -z "$selected_file" ]; then
        echo "Invalid selection."
        exit 1
    fi

    # Determine whether selected file is image or video
    if echo "$selected_file" | grep -Eq "\.(jpg|jpeg|png|bmp)$"; then
        # Prompt for theme update only for swaybg
        echo "Enable Flavours theme update on image change? (y/n)"
        read -r theme_choice
        THEME_UPDATE=$( [ "$theme_choice" = "y" ] && echo "yes" || echo "no" )
        set_swaybg "$selected_file"
    elif echo "$selected_file" | grep -Eq "\.(mp4|mkv|webm)$"; then
        set_mpvpaper "$selected_file"
    fi

    echo "Background set with selected file."
    exit 0
fi

# Prompt user for choice: random swaybg or mpvpaper
echo "(1) swaybg (random image) | (2) mpvpaper (random video)"
read -r choice

# Prompt for theme update preference for swaybg
if [ "$choice" = "1" ]; then
    echo "Enable Flavours theme update on image change? (y/n)"
    read -r theme_choice
    THEME_UPDATE=$( [ "$theme_choice" = "y" ] && echo "yes" || echo "no" )
fi

# Main loop for reloading or confirming
while true; do
    # Kill only the active background process
    kill_bg

    # Set background based on initial choice
    case "$choice" in
        1)
            set_swaybg "$(echo "$IMG_FILES" | shuf -n 1)"
            ;;
        2)
            set_mpvpaper "$(echo "$VID_FILES" | shuf -n 1)"
            ;;
        *)
            echo "Invalid choice."
            exit 1
            ;;
    esac

    # Ask for reload or confirm, no need to press Enter
    echo "(r)eload or (y)es to confirm"
    stty -echo -icanon time 0 min 0
    while :; do
        action=$(dd bs=1 count=1 2>/dev/null)
        if [ "$action" = "r" ]; then
            echo "Reloading..."
            break
        elif [ "$action" = "y" ]; then
            echo "Background confirmed."
            stty sane
            exit 0
        fi
    done
done
